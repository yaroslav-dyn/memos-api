{
    "sourceFile": "auth/auth.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1648217391382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1648217422242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,3 @@\n-const JWTstrategy = require('passport-jwt').Strategy;\n-const ExtractJWT = require('passport-jwt').ExtractJwt;\n-\n-passport.use(\n-  new JWTstrategy(\n-    {\n-      secretOrKey: 'TOP_SECRET',\n-      jwtFromRequest: ExtractJWT.fromUrlQueryParameter('secret_token')\n-    },\n-    async (token, done) => {\n-      try {\n-        return done(null, token.user);\n-      } catch (error) {\n-        done(error);\n-      }\n-    }\n-  )\n-);\n\\ No newline at end of file\n+const passport = require('passport');\n+const localStrategy = require('passport-local').Strategy;\n+const UserModel = require('../model/model');\n\\ No newline at end of file\n"
                },
                {
                    "date": 1648217433121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,23 @@\n const passport = require('passport');\n const localStrategy = require('passport-local').Strategy;\n-const UserModel = require('../model/model');\n\\ No newline at end of file\n+const UserModel = require('../model/model');\n+\n+\n+passport.use(\n+  'signup',\n+  new localStrategy(\n+    {\n+      usernameField: 'email',\n+      passwordField: 'password'\n+    },\n+    async (email, password, done) => {\n+      try {\n+        const user = await UserModel.create({ email, password });\n+\n+        return done(null, user);\n+      } catch (error) {\n+        done(error);\n+      }\n+    }\n+  )\n+);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1648217476803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,5 +19,34 @@\n         done(error);\n       }\n     }\n   )\n+);\n+\n+passport.use(\n+  'login',\n+  new localStrategy(\n+    {\n+      usernameField: 'email',\n+      passwordField: 'password'\n+    },\n+    async (email, password, done) => {\n+      try {\n+        const user = await UserModel.findOne({ email });\n+\n+        if (!user) {\n+          return done(null, false, { message: 'User not found' });\n+        }\n+\n+        const validate = await user.isValidPassword(password);\n+\n+        if (!validate) {\n+          return done(null, false, { message: 'Wrong Password' });\n+        }\n+\n+        return done(null, user, { message: 'Logged in Successfully' });\n+      } catch (error) {\n+        return done(error);\n+      }\n+    }\n+  )\n );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1648217736678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,5 +48,24 @@\n         return done(error);\n       }\n     }\n   )\n+);\n+\n+const JWTstrategy = require('passport-jwt').Strategy;\n+const ExtractJWT = require('passport-jwt').ExtractJwt;\n+\n+passport.use(\n+  new JWTstrategy(\n+    {\n+      secretOrKey: 'TOP_SECRET',\n+      jwtFromRequest: ExtractJWT.fromUrlQueryParameter('secret_token')\n+    },\n+    async (token, done) => {\n+      try {\n+        return done(null, token.user);\n+      } catch (error) {\n+        done(error);\n+      }\n+    }\n+  )\n );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1648217743590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,8 @@\n     }\n   )\n );\n \n-const JWTstrategy = require('passport-jwt').Strategy;\n-const ExtractJWT = require('passport-jwt').ExtractJwt;\n \n passport.use(\n   new JWTstrategy(\n     {\n"
                },
                {
                    "date": 1648217763660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n const passport = require('passport');\n const localStrategy = require('passport-local').Strategy;\n const UserModel = require('../model/model');\n+const JWTstrategy = require('passport-jwt').Strategy;\n+const ExtractJWT = require('passport-jwt').ExtractJwt;\n \n-\n passport.use(\n   'signup',\n   new localStrategy(\n     {\n"
                },
                {
                    "date": 1648218057037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n const passport = require('passport');\n const localStrategy = require('passport-local').Strategy;\n-const UserModel = require('../model/model');\n+const UserModel = require('../models/model');\n+\n const JWTstrategy = require('passport-jwt').Strategy;\n const ExtractJWT = require('passport-jwt').ExtractJwt;\n \n passport.use(\n"
                },
                {
                    "date": 1648218063217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const passport = require('passport');\n const localStrategy = require('passport-local').Strategy;\n-const UserModel = require('../models/model');\n+const UserModel = require('../models/auth');\n \n const JWTstrategy = require('passport-jwt').Strategy;\n const ExtractJWT = require('passport-jwt').ExtractJwt;\n \n"
                },
                {
                    "date": 1648227243193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const passport = require('passport');\n const localStrategy = require('passport-local').Strategy;\n-const UserModel = require('../models/auth');\n+const UserModel = require('../models/');\n \n const JWTstrategy = require('passport-jwt').Strategy;\n const ExtractJWT = require('passport-jwt').ExtractJwt;\n \n"
                },
                {
                    "date": 1648227418052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const passport = require('passport');\n const localStrategy = require('passport-local').Strategy;\n-const UserModel = require('../models/');\n+const UserModel = require('../models/auth');\n \n const JWTstrategy = require('passport-jwt').Strategy;\n const ExtractJWT = require('passport-jwt').ExtractJwt;\n \n@@ -44,8 +44,9 @@\n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n \n+        debugger\n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n         return done(error);\n       }\n"
                },
                {
                    "date": 1648227448904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,8 @@\n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n \n-        debugger\n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n         return done(error);\n       }\n"
                },
                {
                    "date": 1648227475195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,12 @@\n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n \n+        console.log('\n+        ');\n+        \n+\n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n         return done(error);\n       }\n"
                },
                {
                    "date": 1648227481765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,10 +44,9 @@\n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n \n-        console.log('\n-        ');\n+        console.log('debug');\n         \n \n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n"
                },
                {
                    "date": 1648227495573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n \n-        console.log('debug');\n+        console.log('debug', user);\n         \n \n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n"
                },
                {
                    "date": 1648227531961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n \n-        console.log('debug', user);\n+  \n         \n \n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n"
                },
                {
                    "date": 1648300342908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,12 +43,9 @@\n \n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n-\n-  \n-        \n-\n+          \n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n         return done(error);\n       }\n"
                },
                {
                    "date": 1648300354411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n-          \n+        debugger  \n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n         return done(error);\n       }\n"
                },
                {
                    "date": 1648300449192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,8 @@\n \n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n-        debugger  \n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n         return done(error);\n       }\n"
                },
                {
                    "date": 1648300618967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,11 +40,12 @@\n         }\n \n         const validate = await user.isValidPassword(password);\n \n-        if (!validate) {\n-          return done(null, false, { message: 'Wrong Password' });\n-        }\n+        // if (!validate) {\n+        //   return done(null, false, { message: 'Wrong Password' });\n+        // }\n+\n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n         return done(error);\n       }\n"
                },
                {
                    "date": 1648301476375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,11 @@\n         }\n \n         const validate = await user.isValidPassword(password);\n \n+        console.log('');\n+        \n+\n         // if (!validate) {\n         //   return done(null, false, { message: 'Wrong Password' });\n         // }\n \n"
                },
                {
                    "date": 1648301482338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         }\n \n         const validate = await user.isValidPassword(password);\n \n-        console.log('');\n+        console.log('validate', validate);\n         \n \n         // if (!validate) {\n         //   return done(null, false, { message: 'Wrong Password' });\n"
                },
                {
                    "date": 1648301734641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,11 +43,11 @@\n \n         console.log('validate', validate);\n         \n \n-        // if (!validate) {\n-        //   return done(null, false, { message: 'Wrong Password' });\n-        // }\n+        if (!validate) {\n+          return done(null, false, { message: 'Wrong Password' });\n+        }\n \n         return done(null, user, { message: 'Logged in Successfully' });\n       } catch (error) {\n         return done(error);\n"
                },
                {
                    "date": 1648306061999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,8 @@\n           return done(null, false, { message: 'User not found' });\n         }\n \n         const validate = await user.isValidPassword(password);\n-\n-        console.log('validate', validate);\n         \n \n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n"
                },
                {
                    "date": 1648306191067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,8 @@\n         }\n \n         const validate = await user.isValidPassword(password);\n         \n-\n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n \n"
                },
                {
                    "date": 1649144915978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,15 +33,15 @@\n     },\n     async (email, password, done) => {\n       try {\n         const user = await UserModel.findOne({ email });\n-\n+      \n         if (!user) {\n           return done(null, false, { message: 'User not found' });\n         }\n \n         const validate = await user.isValidPassword(password);\n-        \n+\n         if (!validate) {\n           return done(null, false, { message: 'Wrong Password' });\n         }\n \n@@ -57,9 +57,9 @@\n passport.use(\n   new JWTstrategy(\n     {\n       secretOrKey: 'TOP_SECRET',\n-      jwtFromRequest: ExtractJWT.fromUrlQueryParameter('secret_token')\n+      jwtFromRequest: ExtractJWT.fromAuthHeaderAsBearerToken('secret_token')\n     },\n     async (token, done) => {\n       try {\n         return done(null, token.user);\n@@ -67,5 +67,5 @@\n         done(error);\n       }\n     }\n   )\n-);\n\\ No newline at end of file\n+);\n"
                }
            ],
            "date": 1648217391382,
            "name": "Commit-0",
            "content": "const JWTstrategy = require('passport-jwt').Strategy;\nconst ExtractJWT = require('passport-jwt').ExtractJwt;\n\npassport.use(\n  new JWTstrategy(\n    {\n      secretOrKey: 'TOP_SECRET',\n      jwtFromRequest: ExtractJWT.fromUrlQueryParameter('secret_token')\n    },\n    async (token, done) => {\n      try {\n        return done(null, token.user);\n      } catch (error) {\n        done(error);\n      }\n    }\n  )\n);"
        }
    ]
}